name: Update Existing Blog Post
on:
  push:
    branches:
      - "main"
    paths:
      - "posts/**"
jobs:
  get-properties:
    if: github.event.head_commit.modified[0] != null
    name: Get Metadata from Post
    outputs:
      json: ${{ steps.metadata.outputs.json }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v1.0.0
        with:
          files: posts

      - name: Read Post Properties and Write to File
        run: |
          for file in "${{ steps.changed-files.outputs.all_modified_files }}"; do
            ./../../scripts/extract-blog-properties $file
          done

      # Converts the post-properties.yml file created from the previous step
      # to JSON to be written into blogmap.json
      - name: Convert Post Properties to JSON
        uses: fabasoad/yaml-json-xml-converter-action@main
        id: yaml2json
        with:
          path: "post-properties.yml"
          from: "yaml"
          to: "json"

      - name: Write JSON Properties to File
        run: |
          cat <<EOF > post-properties.json
          ${{ steps.yaml2json.outputs.data }}
          EOF
          echo "::set-output name=json::`cat post-properties.json`"

  update-post:
    name: Update Metadata in blogmap.json
    if: always() && needs.get-properties.result == 'success'
    needs: [get-properties]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Write Properties to post-properties.json
        run: |
          cat <<EOF > post-properties.json
          ${{ needs.get-properties.outputs.json }}
          EOF

      - name: Get Discussion ID (new or existing)
        run: |
          DID=$(jq --slurpfile post post-properties.json '$post[][].discussionId' blogmap.json -c)
          DNO=$(jq --slurpfile post post-properties.json '$post[][].discussionNo' blogmap.json -c)
          MEDIUMURL=$(jq --slurpfile post post-properties.json '$post[][].mediumUrl' blogmap.json -c)
          MEDIUMID=$(jq --slurpfile post post-properties.json '$post[][].mediumId' blogmap.json -c)
          [ "$DID" ] || exit 1
          [ "$DNO" ] || exit 1
          echo $(jq --slurpfile post post-properties.json 'del(.[] | select(.slug == $post[][].slug)) | . += [$post[][] + { discussionId: "'"$DID"'", discussionNo: "'"$DNO"'", mediumUrl: "'"$MEDIUMURL"'", mediumId: "'"$MEDIUMID"'" }] | sort_by(.createdAt) | reverse' blogmap.json -c) > blogmap.json

        # Validates that blogmap.json was written with the correct contents
      - name: Validate File Size
        run: ./../../scripts/validate-file-size blogmap.json

      - name: Validate JSON Schema
        uses: docker://orrosenblatt/validate-json-action:latest
        env:
          INPUT_SCHEMA: ./schema.json
          INPUT_JSONS: ./blogmap.json

      - name: Commit Changes
        uses: EndBug/add-and-commit@v7
        with:
          add: "blogmap.json"
          default_author: github_actions
          message: "Update blogmap.json"
          signoff: true
